"""Модуль functools в Python предоставляет несколько полезных функций, которые расширяют функциональные возможности языка. Он содержит инструменты для работы с функциями высшего порядка, такие как каррирование, частичное применение и работа с функциями обратного вызова.

Вот несколько основных возможностей, предоставляемых модулем functools:

functools.reduce(): Эта функция используется для применения функции к последовательности значений с целью свести их к одному значению. Например, можно использовать reduce() для вычисления суммы элементов списка или произведения всех элементов.

Декораторы: functools предоставляет декораторы, такие как @lru_cache, который представляет механизм кеширования результатов вызова функции с заданным размером кеша, и @singledispatch, который обеспечивает диспетчеризацию на основе типов аргументов функции.

Частичное применение функций: Функции functools.partial() и functools.partialmethod() позволяют создавать новые функции, фиксируя часть аргументов перед вызовом.

Декораторы для работы с вызовами: functools.wraps() используется для копирования атрибутов функции, таких как имя и документация, на обертку, что делает ее более прозрачной для использования.

Другие утилиты: functools также предоставляет ряд других полезных функций, таких как functools.cmp_to_key() для преобразования функции сравнения в ключевую функцию для использования в сортировке.

Таким образом, модуль functools обеспечивает различные инструменты для работы с функциями и их вызовами, делая функциональное программирование более удобным и эффективным в Python.

"""